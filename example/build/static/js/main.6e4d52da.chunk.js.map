{"version":3,"sources":["../../src/api/fetchWeather.js","../../src/index.js","App.js","index.js"],"names":["fetchWeather","a","urlWithParams","query","units","lang","fetch","response","data","searchText","useState","console","search","e","apiKey","setQuery","setWeather","className","styles","type","placeholder","value","onChange","onKeyPress","weather","Math","src","alt","description","App","defaultSearch","String","langs","setLang","unit","setUnit","for","id","target","map","lg","u","ReactDOM","render","document","getElementById"],"mappings":"wOAEaA,EAAY,uCAAG,qCAAAC,EAAA,6DACpBC,EAHR,kDAG8B,MAAH,OAASC,EAAT,kBAAwBC,EAAxB,iBAAsCC,EAAtC,kBAAzB,GAD0B,SAGPC,eAA0BC,YAAQ,OAAIA,EAAzD,UAH0B,cAGpBC,EAHoB,yBAI1B,GAJ0B,2CAAH,4D,sQCEzB,SAAS,EAAT,GAAiE,IAApD,EAAoD,EAApD,gBAAoD,EAApD,QAAoD,EAApD,OAAoD,EAApD,OAAsCC,EAAc,EAAdA,WAAc,EACrCC,mBAA1B,GAD+D,mBACzD,EADyD,KACzD,EADyD,OAEjCA,mBAA9B,IAF+D,mBAEzD,EAFyD,KAEzD,EAFyD,KAI/DC,wBACAA,eACA,IAAMC,EAAM,uCAAG,6BAAAX,EAAA,yDACb,SAAIY,MADS,gCAEQb,EAAaG,EAAOC,EAAOU,EAA9C,GAFW,OAELN,EAFK,OAGXO,MACAC,KAJW,2CAAH,sDAOZ,OACE,yBAAKC,UAAWC,EAAO,mBACrB,2BACEC,KADF,OAEEF,UAAWC,EAAM,OACjBE,YAHF,EAIEC,MAJF,EAKEC,SAAUT,YAAC,OAAIE,EAASF,SAL1B,QAMEU,WAAYX,IAEbY,QACC,yBAAKP,UAAWC,EAAa,MAC3B,wBAAID,UAAWC,EAAO,cACpB,8BAAOM,EADT,MAEE,6BAAMA,MAHV,UAKE,yBAAKP,UAAWC,EAAO,cACpBO,WAAWD,OADd,MAEE,6BAPJ,UASE,yBAAKP,UAAWC,EAAa,MAC3B,yBAAKD,UAAWC,EAAhB,aAAqCQ,IAAG,4CAAuCF,aAA/E,KAAwC,WAAyEG,IAAKH,aAAmBI,cACzI,2BAAIJ,aAtBd,gBA8BFK,eAAmB,CACjBf,OADiB,mCAEjBgB,cAFiB,GAGjB1B,MAHiB,SAIjBC,KAJiB,KAKjBI,WAAY,UAGdoB,YAAgB,CACdxB,KADc,OAEdS,OAFc,OAGdV,MAHc,OAId0B,cAJc,OAKdrB,WAAYsB,Q,QCxDRC,G,MAAQ,CAAC,KAAM,KAAM,KAAM,OAC3B5B,EAAQ,CAAC,SAAU,WAAY,YA0BtByB,EAzBH,WAAO,IAAD,EACQnB,mBAAS,MADjB,mBACTL,EADS,KACH4B,EADG,OAEQvB,mBAAS,UAFjB,mBAETwB,EAFS,KAEHC,EAFG,KAGhB,OAAO,yBAAKlB,UAAU,aACpB,yBAAKA,UAAU,QACb,8BACE,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,uBACb,2BAAOmB,IAAI,QAAX,kBACA,4BAAQC,GAAG,OAAOpB,UAAU,eAAeK,SAAU,SAACT,GAAD,OAAOoB,EAAQpB,EAAEyB,OAAOjB,SAC1EW,EAAMO,KAAI,SAAAC,GAAE,OAAI,4BAAQnB,MAAOmB,GAAKA,QAGzC,yBAAKvB,UAAU,uBACb,2BAAOmB,IAAI,QAAX,iBACA,4BAAQC,GAAG,OAAOpB,UAAU,eAAeK,SAAU,SAACT,GAAD,OAAOsB,EAAQtB,EAAEyB,OAAOjB,SAC1EjB,EAAMmC,KAAI,SAAAE,GAAC,OAAI,4BAAQpB,MAAOoB,GAAIA,WAM7C,kBAAC,EAAD,CAAkBpC,KAAMA,EAAMD,MAAO8B,MCtBzCQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6e4d52da.chunk.js","sourcesContent":["const URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport const fetchWeather = async (query, units, apiKey, lang) => {\n  const urlWithParams = URL + `?q=${query}&units=${units}&lang=${lang}&APPID=${apiKey}`\n\n  const data = await fetch(urlWithParams).then(response => response.json());\n  return data;\n}\n\n","\nimport React, { useState } from 'react'\nimport { fetchWeather } from \"./api/fetchWeather\"\nimport styles from './styles.css'\nfunction App({ defaultSearch, units, lang, apiKey, searchText }) {\n  const [query, setQuery] = useState(defaultSearch)\n  const [weather, setWeather] = useState({})\n\n  console.log(\"stylesss\")\n  console.log(styles)\n  const search = async e => {\n    if (e.key == 'Enter') {\n      const data = await fetchWeather(query, units, apiKey, lang);\n      setQuery('')\n      setWeather(data)\n    }\n  }\n  return (\n    <div className={styles[\"main-container\"]}>\n      <input\n        type=\"text\"\n        className={styles[\"search\"]}\n        placeholder={searchText}\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        onKeyPress={search}\n      />\n      {weather.main && (\n        <div className={styles[\"city\"]}>\n          <h2 className={styles[\"city-name\"]}>\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className={styles[\"city-temp\"]}>\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className={styles[\"info\"]}>\n            <img className={styles[\"city-icon\"]} src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nApp.defaultProps = {\n  apiKey: \"0abfcdceb71a6a466de8d0a77256b8ae\",\n  defaultSearch: \"\",\n  units: \"metric\",\n  lang: \"en\",\n  searchText: \"Search\"\n}\n\nApp.propTypes = {\n  lang: String,\n  apiKey: String,\n  units: String,\n  defaultSearch: String,\n  searchText: String\n}\nexport default App;\n","import React, { useState } from 'react'\n\nimport ExampleComponent from 'leveluptoggle'\nimport 'leveluptoggle/dist/index.css'\nconst langs = [\"en\", \"de\", \"ar\", \"zh\"];\nconst units = [\"metric\", \"standard\", \"imperial\"];\nconst App = () => {\n  const [lang, setLang] = useState(\"en\")\n  const [unit, setUnit] = useState(\"metric\")\n  return <div className=\"container\">\n    <div className=\"mt-5\">\n      <form>\n        <div className=\"form-row justify-content-center\">\n          <div className=\"form-group col-md-3\">\n            <label for=\"lang\">Chose Language</label>\n            <select id=\"lang\" className=\"form-control\" onChange={(e) => setLang(e.target.value)}>\n              {langs.map(lg => <option value={lg}>{lg}</option>)}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3\">\n            <label for=\"lang\">Chose Metrics</label>\n            <select id=\"lang\" className=\"form-control\" onChange={(e) => setUnit(e.target.value)}>\n              {units.map(u => <option value={u}>{u}</option>)}\n            </select>\n          </div>\n        </div>\n      </form>\n    </div>\n    <ExampleComponent lang={lang} units={unit} />\n  </div>\n}\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}