{"version":3,"sources":["../../src/api/fetchWeather.js","../../src/index.js","App.js","index.js"],"names":["fetchWeather","a","urlWithParams","query","units","lang","fetch","response","data","closeInput","useState","useEffect","fetchData","console","apiKey","setQuery","setWeather","className","styles","type","placeholder","value","onChange","e","onKeyPress","weather","Math","src","alt","description","App","defaultSearch","searchText","Boolean","langs","setLang","unit","setUnit","setCloseInput","for","id","target","map","lg","u","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.152f5221.chunk.js","sourcesContent":["const URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport const fetchWeather = async (query, units, apiKey, lang) => {\n  const urlWithParams = URL + `?q=${query}&units=${units}&lang=${lang}&APPID=${apiKey}`\n\n  const data = await fetch(urlWithParams).then(response => response.json());\n  return data;\n}\n\n","\nimport React, { useState, useEffect } from 'react'\nimport { fetchWeather } from \"./api/fetchWeather\"\nimport styles from './styles.css'\nfunction App({ defaultSearch, units, lang, apiKey, searchText, closeInput }) {\n  const [query, setQuery] = useState(defaultSearch)\n  const [weather, setWeather] = useState({})\n\n  useEffect(() => {\n    if (defaultSearch) {\n      fetchData()\n    }\n  }, [defaultSearch])\n  useEffect(() => {\n\n  }, [closeInput])\n  console.log(\"stylesss\")\n  console.log(styles)\n  const search = e => {\n    if (e.key == 'Enter') {\n      fetchData()\n    }\n  }\n  const fetchData = async () => {\n    const data = await fetchWeather(query, units, apiKey, lang);\n    setQuery('')\n    setWeather(data)\n  }\n  return (\n    <div className={styles[\"main-container\"]}>\n      {\n        closeInput == false ? <input\n          type=\"text\"\n          className={styles[\"search\"]}\n          placeholder={searchText}\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          onKeyPress={search}\n        />\n          : null\n      }\n      {weather.main && (\n        <div className={styles[\"city\"]}>\n          <h2 className={styles[\"city-name\"]}>\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className={styles[\"city-temp\"]}>\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className={styles[\"info\"]}>\n            <img className={styles[\"city-icon\"]} src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nApp.defaultProps = {\n  apiKey: \"0abfcdceb71a6a466de8d0a77256b8ae\",\n  defaultSearch: \"\",\n  units: \"metric\",\n  lang: \"en\",\n  searchText: \"Search\",\n  closeInput: false\n}\n\nApp.propTypes = {\n  lang: String,\n  apiKey: String,\n  units: String,\n  defaultSearch: String,\n  searchText: String,\n  closeInput: Boolean\n}\nexport default App;\n","import React, { useState } from 'react'\nimport \"reactweathercard/dist/index.css\"\nimport ExampleComponent from 'reactweathercard'\nconst langs = [\"en\", \"de\", \"ar\", \"zh\"];\nconst units = [\"metric\", \"standard\", \"imperial\"];\nconst App = () => {\n  const [lang, setLang] = useState(\"en\")\n  const [unit, setUnit] = useState(\"metric\")\n  const [closeInput, setCloseInput] = useState(false)\n  return <div className=\"container\">\n    <div className=\"mt-5\">\n      <form>\n        <div className=\"form-row justify-content-center\">\n          <div className=\"form-group col-md-3\">\n            <label for=\"lang\">Chose Language</label>\n            <select id=\"lang\" className=\"form-control\" onChange={(e) => setLang(e.target.value)}>\n              {langs.map(lg => <option value={lg}>{lg}</option>)}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3\">\n            <label for=\"lang\">Chose Metrics</label>\n            <select id=\"lang\" className=\"form-control\" onChange={(e) => setUnit(e.target.value)}>\n              {units.map(u => <option value={u}>{u}</option>)}\n            </select>\n          </div>\n          <div className=\"form-group col-md-3\">\n            <label for=\"lang\">Close Input</label>\n            <select id=\"lang\" className=\"form-control\" onChange={(e) => setCloseInput(e.target.value)}>\n              <option value={true}>close</option>\n              <option value={false}>open</option>\n            </select>\n          </div>\n        </div>\n      </form>\n    </div>\n    <ExampleComponent lang={lang} units={unit} defaultSearch=\"istanbul\" closeInput={closeInput} />\n  </div>\n}\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}